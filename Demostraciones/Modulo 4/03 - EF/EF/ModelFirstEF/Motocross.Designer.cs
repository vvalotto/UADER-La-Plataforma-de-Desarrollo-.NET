//------------------------------------------------------------------------------
// <auto-generated>
//    Este código se generó a partir de una plantilla.
//
//    Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//    Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region Metadatos de relaciones en EDM

[assembly: EdmRelationshipAttribute("Motocross", "MarcaEquipo", "Marca", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ModelFirstEF.Marca), "Equipo", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ModelFirstEF.Equipo))]
[assembly: EdmRelationshipAttribute("Motocross", "EquipoCorredor", "Equipo", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ModelFirstEF.Equipo), "Corredor", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ModelFirstEF.Corredor))]
[assembly: EdmRelationshipAttribute("Motocross", "CorredorClase", "Corredor", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ModelFirstEF.Corredor), "Clase", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ModelFirstEF.Clase))]

#endregion

namespace ModelFirstEF
{
    #region Contextos
    
    /// <summary>
    /// No hay documentación de metadatos disponible.
    /// </summary>
    public partial class MotocrossContainer : ObjectContext
    {
        #region Constructores
    
        /// <summary>
        /// Inicializa un nuevo objeto MotocrossContainer usando la cadena de conexión encontrada en la sección 'MotocrossContainer' del archivo de configuración de la aplicación.
        /// </summary>
        public MotocrossContainer() : base("name=MotocrossContainer", "MotocrossContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Inicializar un nuevo objeto MotocrossContainer.
        /// </summary>
        public MotocrossContainer(string connectionString) : base(connectionString, "MotocrossContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Inicializar un nuevo objeto MotocrossContainer.
        /// </summary>
        public MotocrossContainer(EntityConnection connection) : base(connection, "MotocrossContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Métodos parciales
    
        partial void OnContextCreated();
    
        #endregion
    
        #region Propiedades de ObjectSet
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        public ObjectSet<Equipo> Equipo
        {
            get
            {
                if ((_Equipo == null))
                {
                    _Equipo = base.CreateObjectSet<Equipo>("Equipo");
                }
                return _Equipo;
            }
        }
        private ObjectSet<Equipo> _Equipo;
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        public ObjectSet<Marca> Marca
        {
            get
            {
                if ((_Marca == null))
                {
                    _Marca = base.CreateObjectSet<Marca>("Marca");
                }
                return _Marca;
            }
        }
        private ObjectSet<Marca> _Marca;
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        public ObjectSet<Corredor> Corredor
        {
            get
            {
                if ((_Corredor == null))
                {
                    _Corredor = base.CreateObjectSet<Corredor>("Corredor");
                }
                return _Corredor;
            }
        }
        private ObjectSet<Corredor> _Corredor;
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        public ObjectSet<Clase> Clase
        {
            get
            {
                if ((_Clase == null))
                {
                    _Clase = base.CreateObjectSet<Clase>("Clase");
                }
                return _Clase;
            }
        }
        private ObjectSet<Clase> _Clase;

        #endregion
        #region Métodos AddTo
    
        /// <summary>
        /// Método desusado para agregar un nuevo objeto al EntitySet Equipo. Considere la posibilidad de usar el método .Add de la propiedad ObjectSet&lt;T&gt; asociada.
        /// </summary>
        public void AddToEquipo(Equipo equipo)
        {
            base.AddObject("Equipo", equipo);
        }
    
        /// <summary>
        /// Método desusado para agregar un nuevo objeto al EntitySet Marca. Considere la posibilidad de usar el método .Add de la propiedad ObjectSet&lt;T&gt; asociada.
        /// </summary>
        public void AddToMarca(Marca marca)
        {
            base.AddObject("Marca", marca);
        }
    
        /// <summary>
        /// Método desusado para agregar un nuevo objeto al EntitySet Corredor. Considere la posibilidad de usar el método .Add de la propiedad ObjectSet&lt;T&gt; asociada.
        /// </summary>
        public void AddToCorredor(Corredor corredor)
        {
            base.AddObject("Corredor", corredor);
        }
    
        /// <summary>
        /// Método desusado para agregar un nuevo objeto al EntitySet Clase. Considere la posibilidad de usar el método .Add de la propiedad ObjectSet&lt;T&gt; asociada.
        /// </summary>
        public void AddToClase(Clase clase)
        {
            base.AddObject("Clase", clase);
        }

        #endregion
    }
    

    #endregion
    
    #region Entidades
    
    /// <summary>
    /// No hay documentación de metadatos disponible.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Motocross", Name="Clase")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Clase : EntityObject
    {
        #region Método de generador
    
        /// <summary>
        /// Crear un nuevo objeto Clase.
        /// </summary>
        /// <param name="iDClase">Valor inicial de la propiedad IDClase.</param>
        /// <param name="nombreClase">Valor inicial de la propiedad NombreClase.</param>
        public static Clase CreateClase(global::System.Int32 iDClase, global::System.String nombreClase)
        {
            Clase clase = new Clase();
            clase.IDClase = iDClase;
            clase.NombreClase = nombreClase;
            return clase;
        }

        #endregion
        #region Propiedades primitivas
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IDClase
        {
            get
            {
                return _IDClase;
            }
            set
            {
                if (_IDClase != value)
                {
                    OnIDClaseChanging(value);
                    ReportPropertyChanging("IDClase");
                    _IDClase = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IDClase");
                    OnIDClaseChanged();
                }
            }
        }
        private global::System.Int32 _IDClase;
        partial void OnIDClaseChanging(global::System.Int32 value);
        partial void OnIDClaseChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NombreClase
        {
            get
            {
                return _NombreClase;
            }
            set
            {
                OnNombreClaseChanging(value);
                ReportPropertyChanging("NombreClase");
                _NombreClase = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("NombreClase");
                OnNombreClaseChanged();
            }
        }
        private global::System.String _NombreClase;
        partial void OnNombreClaseChanging(global::System.String value);
        partial void OnNombreClaseChanged();

        #endregion
    
        #region Propiedades de navegación
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Motocross", "CorredorClase", "Corredor")]
        public Corredor Corredor
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Corredor>("Motocross.CorredorClase", "Corredor").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Corredor>("Motocross.CorredorClase", "Corredor").Value = value;
            }
        }
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Corredor> CorredorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Corredor>("Motocross.CorredorClase", "Corredor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Corredor>("Motocross.CorredorClase", "Corredor", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No hay documentación de metadatos disponible.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Motocross", Name="Corredor")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Corredor : EntityObject
    {
        #region Método de generador
    
        /// <summary>
        /// Crear un nuevo objeto Corredor.
        /// </summary>
        /// <param name="iDCorredor">Valor inicial de la propiedad IDCorredor.</param>
        /// <param name="nombre">Valor inicial de la propiedad Nombre.</param>
        /// <param name="apellido">Valor inicial de la propiedad Apellido.</param>
        /// <param name="edad">Valor inicial de la propiedad Edad.</param>
        /// <param name="iDClase">Valor inicial de la propiedad IDClase.</param>
        /// <param name="iDEquipo">Valor inicial de la propiedad IDEquipo.</param>
        public static Corredor CreateCorredor(global::System.Int32 iDCorredor, global::System.String nombre, global::System.String apellido, global::System.Int16 edad, global::System.Int32 iDClase, global::System.String iDEquipo)
        {
            Corredor corredor = new Corredor();
            corredor.IDCorredor = iDCorredor;
            corredor.Nombre = nombre;
            corredor.Apellido = apellido;
            corredor.Edad = edad;
            corredor.IDClase = iDClase;
            corredor.IDEquipo = iDEquipo;
            return corredor;
        }

        #endregion
        #region Propiedades primitivas
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IDCorredor
        {
            get
            {
                return _IDCorredor;
            }
            set
            {
                if (_IDCorredor != value)
                {
                    OnIDCorredorChanging(value);
                    ReportPropertyChanging("IDCorredor");
                    _IDCorredor = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IDCorredor");
                    OnIDCorredorChanged();
                }
            }
        }
        private global::System.Int32 _IDCorredor;
        partial void OnIDCorredorChanging(global::System.Int32 value);
        partial void OnIDCorredorChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Nombre
        {
            get
            {
                return _Nombre;
            }
            set
            {
                OnNombreChanging(value);
                ReportPropertyChanging("Nombre");
                _Nombre = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Nombre");
                OnNombreChanged();
            }
        }
        private global::System.String _Nombre;
        partial void OnNombreChanging(global::System.String value);
        partial void OnNombreChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Apellido
        {
            get
            {
                return _Apellido;
            }
            set
            {
                OnApellidoChanging(value);
                ReportPropertyChanging("Apellido");
                _Apellido = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Apellido");
                OnApellidoChanged();
            }
        }
        private global::System.String _Apellido;
        partial void OnApellidoChanging(global::System.String value);
        partial void OnApellidoChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 Edad
        {
            get
            {
                return _Edad;
            }
            set
            {
                OnEdadChanging(value);
                ReportPropertyChanging("Edad");
                _Edad = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Edad");
                OnEdadChanged();
            }
        }
        private global::System.Int16 _Edad;
        partial void OnEdadChanging(global::System.Int16 value);
        partial void OnEdadChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IDClase
        {
            get
            {
                return _IDClase;
            }
            set
            {
                OnIDClaseChanging(value);
                ReportPropertyChanging("IDClase");
                _IDClase = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IDClase");
                OnIDClaseChanged();
            }
        }
        private global::System.Int32 _IDClase;
        partial void OnIDClaseChanging(global::System.Int32 value);
        partial void OnIDClaseChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String IDEquipo
        {
            get
            {
                return _IDEquipo;
            }
            set
            {
                OnIDEquipoChanging(value);
                ReportPropertyChanging("IDEquipo");
                _IDEquipo = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("IDEquipo");
                OnIDEquipoChanged();
            }
        }
        private global::System.String _IDEquipo;
        partial void OnIDEquipoChanging(global::System.String value);
        partial void OnIDEquipoChanged();

        #endregion
    
        #region Propiedades de navegación
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Motocross", "EquipoCorredor", "Equipo")]
        public Equipo Equipo
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Equipo>("Motocross.EquipoCorredor", "Equipo").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Equipo>("Motocross.EquipoCorredor", "Equipo").Value = value;
            }
        }
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Equipo> EquipoReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Equipo>("Motocross.EquipoCorredor", "Equipo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Equipo>("Motocross.EquipoCorredor", "Equipo", value);
                }
            }
        }
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Motocross", "CorredorClase", "Clase")]
        public EntityCollection<Clase> Clase
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Clase>("Motocross.CorredorClase", "Clase");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Clase>("Motocross.CorredorClase", "Clase", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No hay documentación de metadatos disponible.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Motocross", Name="Equipo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Equipo : EntityObject
    {
        #region Método de generador
    
        /// <summary>
        /// Crear un nuevo objeto Equipo.
        /// </summary>
        /// <param name="iDEquipo">Valor inicial de la propiedad IDEquipo.</param>
        /// <param name="nombreEquipo">Valor inicial de la propiedad NombreEquipo.</param>
        /// <param name="isEquipoConSoponser">Valor inicial de la propiedad IsEquipoConSoponser.</param>
        /// <param name="iDMarca">Valor inicial de la propiedad IDMarca.</param>
        public static Equipo CreateEquipo(global::System.Int32 iDEquipo, global::System.Boolean nombreEquipo, global::System.String isEquipoConSoponser, global::System.Int32 iDMarca)
        {
            Equipo equipo = new Equipo();
            equipo.IDEquipo = iDEquipo;
            equipo.NombreEquipo = nombreEquipo;
            equipo.IsEquipoConSoponser = isEquipoConSoponser;
            equipo.IDMarca = iDMarca;
            return equipo;
        }

        #endregion
        #region Propiedades primitivas
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IDEquipo
        {
            get
            {
                return _IDEquipo;
            }
            set
            {
                if (_IDEquipo != value)
                {
                    OnIDEquipoChanging(value);
                    ReportPropertyChanging("IDEquipo");
                    _IDEquipo = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IDEquipo");
                    OnIDEquipoChanged();
                }
            }
        }
        private global::System.Int32 _IDEquipo;
        partial void OnIDEquipoChanging(global::System.Int32 value);
        partial void OnIDEquipoChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean NombreEquipo
        {
            get
            {
                return _NombreEquipo;
            }
            set
            {
                OnNombreEquipoChanging(value);
                ReportPropertyChanging("NombreEquipo");
                _NombreEquipo = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NombreEquipo");
                OnNombreEquipoChanged();
            }
        }
        private global::System.Boolean _NombreEquipo;
        partial void OnNombreEquipoChanging(global::System.Boolean value);
        partial void OnNombreEquipoChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String IsEquipoConSoponser
        {
            get
            {
                return _IsEquipoConSoponser;
            }
            set
            {
                OnIsEquipoConSoponserChanging(value);
                ReportPropertyChanging("IsEquipoConSoponser");
                _IsEquipoConSoponser = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("IsEquipoConSoponser");
                OnIsEquipoConSoponserChanged();
            }
        }
        private global::System.String _IsEquipoConSoponser;
        partial void OnIsEquipoConSoponserChanging(global::System.String value);
        partial void OnIsEquipoConSoponserChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IDMarca
        {
            get
            {
                return _IDMarca;
            }
            set
            {
                OnIDMarcaChanging(value);
                ReportPropertyChanging("IDMarca");
                _IDMarca = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IDMarca");
                OnIDMarcaChanged();
            }
        }
        private global::System.Int32 _IDMarca;
        partial void OnIDMarcaChanging(global::System.Int32 value);
        partial void OnIDMarcaChanged();

        #endregion
    
        #region Propiedades de navegación
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Motocross", "MarcaEquipo", "Marca")]
        public Marca Marca
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Marca>("Motocross.MarcaEquipo", "Marca").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Marca>("Motocross.MarcaEquipo", "Marca").Value = value;
            }
        }
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Marca> MarcaReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Marca>("Motocross.MarcaEquipo", "Marca");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Marca>("Motocross.MarcaEquipo", "Marca", value);
                }
            }
        }
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Motocross", "EquipoCorredor", "Corredor")]
        public EntityCollection<Corredor> Corredor
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Corredor>("Motocross.EquipoCorredor", "Corredor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Corredor>("Motocross.EquipoCorredor", "Corredor", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No hay documentación de metadatos disponible.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Motocross", Name="Marca")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Marca : EntityObject
    {
        #region Método de generador
    
        /// <summary>
        /// Crear un nuevo objeto Marca.
        /// </summary>
        /// <param name="iDMarca">Valor inicial de la propiedad IDMarca.</param>
        /// <param name="nombreMarca">Valor inicial de la propiedad NombreMarca.</param>
        public static Marca CreateMarca(global::System.Int32 iDMarca, global::System.String nombreMarca)
        {
            Marca marca = new Marca();
            marca.IDMarca = iDMarca;
            marca.NombreMarca = nombreMarca;
            return marca;
        }

        #endregion
        #region Propiedades primitivas
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IDMarca
        {
            get
            {
                return _IDMarca;
            }
            set
            {
                if (_IDMarca != value)
                {
                    OnIDMarcaChanging(value);
                    ReportPropertyChanging("IDMarca");
                    _IDMarca = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IDMarca");
                    OnIDMarcaChanged();
                }
            }
        }
        private global::System.Int32 _IDMarca;
        partial void OnIDMarcaChanging(global::System.Int32 value);
        partial void OnIDMarcaChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NombreMarca
        {
            get
            {
                return _NombreMarca;
            }
            set
            {
                OnNombreMarcaChanging(value);
                ReportPropertyChanging("NombreMarca");
                _NombreMarca = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("NombreMarca");
                OnNombreMarcaChanged();
            }
        }
        private global::System.String _NombreMarca;
        partial void OnNombreMarcaChanging(global::System.String value);
        partial void OnNombreMarcaChanged();

        #endregion
    
        #region Propiedades de navegación
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Motocross", "MarcaEquipo", "Equipo")]
        public EntityCollection<Equipo> Equipo
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Equipo>("Motocross.MarcaEquipo", "Equipo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Equipo>("Motocross.MarcaEquipo", "Equipo", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
